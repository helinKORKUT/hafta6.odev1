{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34a96e49",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Bir sözlük oluşturulur ve bu sözlükte öğrencilerin isimleri ve Matematik, Fizik, Kimya notları tutulur.\n",
    "#Kullanıcıdan isim ve ders ismi(Matematik, Fizik, Kimya) istenir ve bu bilgilere göre çıktı verilir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dbe8ddf2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Öğrencinin adı: helin\n",
      "Dersin adı: kimya\n",
      "helin isimli öğrenci bulunamadı.\n"
     ]
    }
   ],
   "source": [
    "ogrenci_notlari = {\"furkan\": {\"matematik\" : 100,\n",
    "                              \"fizik\" : 100,\n",
    "                              \"kimya\" : 100},\n",
    "                  \n",
    "                  \"mehmet\": {\"matemaik\" : 65,\n",
    "                            \"fizik\" : 40,\n",
    "                            \"kimya\" : 70},\n",
    "                   \n",
    "                  \"sena\": { \"matematik\" : 20,\n",
    "                          \"fizik\" : 80,\n",
    "                          \"kimya\" : 55},\n",
    "                   \n",
    "                  \"yeşim\" : { \"matematik\" : 67,\n",
    "                            \"fizik\" : 84,\n",
    "                            \"kimya\" : 60},\n",
    "                  \n",
    "                  \"mustafa\" : {\"matematik\" : 70,\n",
    "                               \"fizik\" : 45,\n",
    "                               \"kimya\" : 78}}\n",
    "\n",
    "isim = input(\"Öğrencinin adı: \")\n",
    "ders_adi = input(\"Dersin adı: \")\n",
    "\n",
    "if isim in ogrenci_notlari: \n",
    "    if ders_adi in ogrenci_notlari[isim]:\n",
    "        print(\"{} isimli kişinin {} notu: {}\".format(isim, ders_adi, ogrenci_notlari[isim][ders_adi]))\n",
    "    else:\n",
    "        print(\"Belirtmiş olduğunuz {} dersi için not bulunamadı.\".format(ders_adi))\n",
    "else:\n",
    "    print(\"{} isimli öğrenci bulunamadı.\".format(isim))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4938038",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sözlük üzerinde değerleri değiştirme, yeni değer ekleme, kullanıcıya ulaşmak istediği bilgileri sorma gibi uygulamalar yapın."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fe06cffc",
   "metadata": {},
   "outputs": [],
   "source": [
    "#değiştirme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f4993d33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'furkan': {'matematik': 10, 'fizik': 100, 'kimya': 100},\n",
       " 'mehmet': {'matemaik': 65, 'fizik': 40, 'kimya': 70},\n",
       " 'sena': {'matematik': 20, 'fizik': 80, 'kimya': 55},\n",
       " 'yeşim': {'matematik': 67, 'fizik': 84, 'kimya': 60},\n",
       " 'mustafa': {'matematik': 70, 'fizik': 45, 'kimya': 78}}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ogrenci_notlari[\"furkan\"][\"matematik\"] = 10\n",
    "\n",
    "ogrenci_notlari"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a0c71073",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'furkan': {'matematik': 10, 'fizik': 100, 'kimya': 100},\n",
       " 'mehmet': {'matemaik': 65, 'fizik': 40, 'kimya': 70},\n",
       " 'sena': {'matematik': 20, 'fizik': 80, 'kimya': 55},\n",
       " 'yeşim': {'matematik': 67, 'fizik': 84, 'kimya': 60},\n",
       " 'mustafa': {'matematik': 70, 'fizik': 45, 'kimya': 88}}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ogrenci_notlari[\"mustafa\"][\"kimya\"] = 88\n",
    "ogrenci_notlari"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8ffbc6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# yeni değer ekleme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a902b9a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'furkan': {'matematik': 10, 'fizik': 100, 'kimya': 100},\n",
       " 'mehmet': {'matemaik': 65, 'fizik': 40, 'kimya': 70},\n",
       " 'sena': {'matematik': 20, 'fizik': 80, 'kimya': 55},\n",
       " 'yeşim': {'matematik': 67, 'fizik': 84, 'kimya': 60},\n",
       " 'mustafa': {'matematik': 70, 'fizik': 45, 'kimya': 88},\n",
       " 'Helin': {'matematik': 85, 'fizik': 30, 'kimya': 30}}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ogrenci_notlari[\"Helin\"] = {\"matematik\": 85, \"fizik\": 30, \"kimya\": 30}\n",
    "ogrenci_notlari"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4b9ae711",
   "metadata": {},
   "outputs": [],
   "source": [
    "#kullanıcıya ulaşmak istediği bilgileri sorma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ecc05594",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Notlarını görmek istediğiniz öğrencinin adını giriniz: yeşim\n",
      "yeşim isimli kişinin notları: kimya \n"
     ]
    }
   ],
   "source": [
    "ogrenci_notlari = {\"furkan\": {\"matematik\" : 100,\n",
    "                              \"fizik\" : 100,\n",
    "                              \"kimya\" : 100},\n",
    "                  \n",
    "                  \"mehmet\": {\"matemaik\" : 65,\n",
    "                            \"fizik\" : 40,\n",
    "                            \"kimya\" : 70},\n",
    "                   \n",
    "                  \"sena\": { \"matematik\" : 20,\n",
    "                          \"fizik\" : 80,\n",
    "                          \"kimya\" : 55},\n",
    "                   \n",
    "                  \"yeşim\" : { \"matematik\" : 67,\n",
    "                            \"fizik\" : 84,\n",
    "                            \"kimya\" : 60},\n",
    "                  \n",
    "                  \"mustafa\" : {\"matematik\" : 70,\n",
    "                               \"fizik\" : 45,\n",
    "                               \"kimya\" : 78}}\n",
    "\n",
    "\n",
    "isim = input(\"Notlarını görmek istediğiniz öğrencinin adını giriniz: \")\n",
    "\n",
    "if isim in ogrenci_notlari:\n",
    "    print(\"{} isimli kişinin notları: {} \".format(isim, ders_adi, ogrenci_notlari[isim]))\n",
    "    \n",
    "else:\n",
    "    print(\"Bu isimde bir öğrenci bulunamadı.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a671fefe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Notlarını görmek istediğiniz öğrencinin adını giriniz: yeşim\n",
      "yeşim adlı öğrencinin notları:\n",
      "matematik: 67\n",
      "fizik: 84\n",
      "kimya: 60\n"
     ]
    }
   ],
   "source": [
    "ogrenci_notlari = {\n",
    "    \"furkan\": {\"matematik\": 100, \"fizik\": 100, \"kimya\": 100},\n",
    "    \"mehmet\": {\"matematik\": 65, \"fizik\": 40, \"kimya\": 70},\n",
    "    \"sena\": {\"matematik\": 20, \"fizik\": 80, \"kimya\": 55},\n",
    "    \"yeşim\": {\"matematik\": 67, \"fizik\": 84, \"kimya\": 60},\n",
    "    \"mustafa\": {\"matematik\": 70, \"fizik\": 45, \"kimya\": 78}\n",
    "}\n",
    "\n",
    "isim = input(\" Notlarını görmek istediğiniz öğrencinin adını giriniz: \")\n",
    "\n",
    "if isim in ogrenci_notlari:\n",
    "    print(\"{} isimli öğrencinin notları:\".format(isim))\n",
    "    \n",
    "    ogrenci_notlari_isim = ogrenci_notlari[isim]\n",
    "    for ders in ogrenci_notlari_isim:\n",
    "        notu = ogrenci_notlari_isim[ders]\n",
    "        print(\"{}: {}\".format(ders, notu))\n",
    "else:\n",
    "    print(\"Bu isimde bir öğrenci bulunamadı.\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
